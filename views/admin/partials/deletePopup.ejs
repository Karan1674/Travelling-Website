
<style>
    /* Overlay for the popup */
    .popup-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        z-index: 10500;
    }

    /* Popup container */
    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        border-radius: 5px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 10501;
        max-width: 400px;
        width: 90%;
        padding: 20px;
    }

    /* Show popup and overlay */
    .popup-overlay.show,
    .popup.show {
        display: block;
    }

    /* Popup header */
    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .popup-header h5 {
        margin: 0;
        font-size: 1.25rem;
    }

    .popup-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
    }

    /* Popup body */
    .popup-body {
        margin-bottom: 15px;
        font-size: 1rem;
    }

    /* Popup footer */
    .popup-footer {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }

    /* Responsive adjustments */
    @media (max-width: 576px) {
        .popup {
            width: 95%;
        }
    }
</style>

<!-- Custom Delete Popup -->
<div class="popup-overlay" id="deletePopupOverlay"></div>
<div class="popup" id="deletePopup">
    <div class="popup-header">
        <h5>Confirm Delete</h5>
        <button class="popup-close" id="popupCloseBtn">&times;</button>
    </div>
    <div class="popup-body">
        Are you sure you want to delete this <%= entityName || 'Item' %>?
    </div>
    <div class="popup-footer">
        <button type="button" class="btn btn-secondary" id="popupCancelBtn">Cancel</button>
        <button type="button" class="btn btn-danger" id="popupConfirmDeleteBtn">Delete</button>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const deleteButtons = document.querySelectorAll('.<%= buttonClass %>');
        const popupOverlay = document.getElementById('deletePopupOverlay');
        const popup = document.getElementById('deletePopup');
        const cancelBtn = document.getElementById('popupCancelBtn');
        const closeBtn = document.getElementById('popupCloseBtn');
        const confirmDeleteBtn = document.getElementById('popupConfirmDeleteBtn');
        const deleteEndpoint = '<%= deleteEndpoint  %>';

        if (!popupOverlay || !popup || !cancelBtn || !closeBtn || !confirmDeleteBtn) {
            console.error('Popup elements not found');
            return;
        }

        const showPopup = () => {
            popupOverlay.classList.add('show');
            popup.classList.add('show');
        };

        const hidePopup = () => {
            popupOverlay.classList.remove('show');
            popup.classList.remove('show');
            confirmDeleteBtn.removeAttribute('data-itemId');
        };

        deleteButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.preventDefault(); // Prevent default link behavior
                const itemId = button.getAttribute('data-itemId');
                if (itemId) {
                    confirmDeleteBtn.setAttribute('data-itemId', itemId);
                    showPopup();
                } else {
                    console.error('itemId not found on button');
                }
            });
        });

        confirmDeleteBtn.addEventListener('click', async () => {
            const itemId = confirmDeleteBtn.getAttribute('data-itemId');
            if (itemId) {
                try {
                    const response = await fetch(`${deleteEndpoint}/${itemId}`, {
                        method: 'GET',
                    });
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        const result = await response.json();
                        console.error(`Failed to delete ${'<%= entityName %>'}:`, result.message || 'Unknown error');
                   
                    }
                    hidePopup();
                } catch (error) {
                    console.error(`Error deleting ${'<%= entityName %>'}:`, error);
                    hidePopup();
                }
            } else {
                console.error('itemId not found on confirm button');
                hidePopup();
            }
        });

        cancelBtn.addEventListener('click', hidePopup);
        closeBtn.addEventListener('click', hidePopup);
        popupOverlay.addEventListener('click', hidePopup);
    });
</script>